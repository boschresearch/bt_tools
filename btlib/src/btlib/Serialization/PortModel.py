# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Serialization

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()


class PortModel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsPortModel(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = PortModel()
        x.Init(buf, n + offset)
        return x

    # PortModel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # PortModel
    def PortName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # PortModel
    def Direction(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(
                flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # PortModel
    def TypeInfo(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # PortModel
    def Description(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(
            self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None


def PortModelStart(builder):
    builder.StartObject(4)


def PortModelAddPortName(builder, portName):
    builder.PrependUOffsetTRelativeSlot(
        0, flatbuffers.number_types.UOffsetTFlags.py_type(portName), 0)


def PortModelAddDirection(
        builder, direction):
    builder.PrependInt8Slot(1, direction, 0)


def PortModelAddTypeInfo(builder, typeInfo):
    builder.PrependUOffsetTRelativeSlot(
        2, flatbuffers.number_types.UOffsetTFlags.py_type(typeInfo), 0)


def PortModelAddDescription(builder, description):
    builder.PrependUOffsetTRelativeSlot(
        3, flatbuffers.number_types.UOffsetTFlags.py_type(description), 0)


def PortModelEnd(builder):
    return builder.EndObject()
